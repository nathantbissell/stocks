{"version":3,"sources":["Navbar.js","Home.js","Chart.js","Stocks.js","App.js","serviceWorker.js","index.js","me.jpg"],"names":["Navbar","react_default","a","createElement","NavWrapper","className","react_router_dom","to","title","href","rel","target","src","logo","alt","Component","styled","nav","_templateObject","Home","Fragment","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","labels","day","datasets","label","backgroundColor","borderColor","fill","value","options","prevProps","previousValues","setState","previousDays","es","width","height","Stocks","buyStock","_this$state","balance","toggleLowFunds","quantity","triggerGameOver","sellStock","_this$state2","qualityBanner","winBanner","advanceDay","_this$state3","Math","floor","random","concat","toConsumableArray","console","log","_this$state4","gameOver","toast","error","position","POSITION","BOTTOM_RIGHT","info","success","TOP_CENTER","resetGame","lowFunds","_this$state5","onClick","id","Chart_Chart","react_toastify","ProgressBar_default","striped","variant","now","App","Navbar_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom_min","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1177186b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport logo from './me.jpg'\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <NavWrapper className='navbar navbar-expand-sm navbar-dark px-sm-5'>\r\n        <Link to='/'>\r\n          <i className='fas fa-home nav-link'> Home</i>\r\n        </Link>\r\n        <Link to='/stocks'>\r\n          <i className='fas fa-chart-line nav-link'> Game</i>\r\n        </Link>\r\n        <span title='My Portfolio'>\r\n          <a\r\n            href='https://nathantbissell.github.io/Portfolio/'\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <img src={logo} alt='me' className='logo' />\r\n          </a>\r\n        </span>\r\n      </NavWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst NavWrapper = styled.nav`\r\n  background: var(--darkGrey);\r\n  justify-content: space-evenly;\r\n  .nav-link {\r\n    justify-content: space-between;\r\n    color: var(--mainWhite) !important;\r\n    font-size: 1.3rem;\r\n    // 1rem = 16px, if user changes size of site, will respond accordingly\r\n    // important is called here cause navlink is a boostrap method that needs overriding\r\n    text-transform: capitalize;\r\n  }\r\n  .nav-link:hover {\r\n    color: var(--mainGrey) !important;\r\n    transition: all 0.5s ease-in-out;\r\n  }\r\n  .logo {\r\n    float: right;\r\n    right: 3vh;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    border-radius: 50%;\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className='home'>\r\n          <div className='home-overlay'>\r\n            <div className='home-objective'>\r\n              <h1>Bull Market</h1>\r\n              <h4>\r\n                Objective:{' '}\r\n                <em>Fill the balance meter before the value hits 0</em>\r\n              </h4>\r\n              <h6>Designed by NBMT inc</h6>\r\n            </div>\r\n            <div className='home-desc'>\r\n              <ul>\r\n                <li>You have the option to buy or sell stock.</li>\r\n                <li>If you're done making trades, advance to the next day.</li>\r\n                <li>\r\n                  The stock value will increase or decrease randomly each time\r\n                  you advance a day.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2-update'\r\n\r\nexport default class Chart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: {\r\n        labels: this.props.day,\r\n        datasets: [\r\n          {\r\n            label: 'Yesterdays Stock Value',\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            fill: true,\r\n            data: this.props.value\r\n          }\r\n        ]\r\n      },\r\n      options: {}\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.previousValues !== prevProps.previousValues) {\r\n      this.setState({\r\n        datasets: [\r\n          {\r\n            label: 'Yesterdays Stock Value',\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            fill: false,\r\n            data: this.props.previousValues\r\n          }\r\n        ],\r\n        labels: this.props.previousDays\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='chart'>\r\n        <Line data={this.state} width={400} height={400} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Chart from './Chart'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './Stocks.css'\r\n\r\nexport default class Stocks extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: 3,\r\n      previousValues: [],\r\n      day: 0,\r\n      previousDays: [],\r\n      quantity: 1,\r\n      balance: 10,\r\n      gameOver: false,\r\n      lowFunds: false\r\n    }\r\n  }\r\n\r\n  buyStock = () => {\r\n    const { balance, value } = this.state\r\n    if (balance < 25) {\r\n      this.toggleLowFunds()\r\n    }\r\n    if (balance - value >= 0) {\r\n      this.setState({\r\n        quantity: this.state.quantity + 1,\r\n        balance: balance - value\r\n      })\r\n    }\r\n    this.triggerGameOver()\r\n  }\r\n\r\n  sellStock = () => {\r\n    const { balance, value } = this.state\r\n    if (this.state.quantity > 0) {\r\n      this.setState({\r\n        quantity: this.state.quantity - 1,\r\n        balance: balance + value\r\n      })\r\n    }\r\n    this.triggerGameOver()\r\n    if (balance > 1500) {\r\n      this.qualityBanner()\r\n    }\r\n    if (balance >= 2000) {\r\n      this.winBanner()\r\n    }\r\n  }\r\n\r\n  advanceDay = () => {\r\n    const { value, day, previousDays, previousValues } = this.state\r\n    value\r\n      ? this.setState({\r\n          value: Math.floor(Math.random() * 101 + 0),\r\n          previousValues: [...previousValues, value],\r\n          previousDays: [...previousDays, day],\r\n          day: day + 1\r\n        })\r\n      : this.triggerGameOver()\r\n    console.log('previousDay value' + previousDays)\r\n  }\r\n\r\n  triggerGameOver = () => {\r\n    const { balance, value } = this.state\r\n    if (value === 0 || balance <= 0) {\r\n      this.setState({\r\n        gameOver: true\r\n      })\r\n    }\r\n  }\r\n  toggleLowFunds = () =>\r\n    toast.error('Warning! Low on funds!', {\r\n      position: toast.POSITION.BOTTOM_RIGHT\r\n    })\r\n  qualityBanner = () =>\r\n    toast.info(\"You're almost there!\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT\r\n    })\r\n  winBanner = () =>\r\n    toast.success('You won! Congrats!', {\r\n      position: toast.POSITION.TOP_CENTER\r\n    })\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      value: 3,\r\n      previousValues: [],\r\n      day: 0,\r\n      previousDays: [],\r\n      quantity: 1,\r\n      balance: 10,\r\n      gameOver: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      quantity,\r\n      balance,\r\n      day,\r\n      previousValues,\r\n      previousDays\r\n    } = this.state\r\n\r\n    return !this.state.gameOver ? (\r\n      <React.Fragment>\r\n        <div className='container'>\r\n          <div className='jumbotron'>\r\n            <h3 className='d-flex justify-content-center' id='label'>\r\n              Current\r\n            </h3>\r\n            <hr />\r\n            <div className='dayLabel' id='label'>\r\n              <i className='far fa-calendar-alt' /> Day : {day}\r\n            </div>\r\n            <div className='quantityLabel' id='label'>\r\n              <i className='fas fa-coins' /> Quantity : {quantity}\r\n            </div>\r\n\r\n            <div className='valueLabel' id='label'>\r\n              <i className='fas fa-chart-line' /> Value : {value}\r\n            </div>\r\n            <div className='balanceLabel' id='label'>\r\n              <i className='fas fa-money-bill' /> Balance : {balance}\r\n            </div>\r\n          </div>\r\n          <Chart\r\n            previousValues={previousValues}\r\n            previousDays={previousDays}\r\n            value={value}\r\n            day={day}\r\n          />\r\n\r\n          <div className='jumbotron'>\r\n            <button\r\n              className='buyStockButton m-3 d-block'\r\n              onClick={this.buyStock}\r\n            >\r\n              Buy\r\n              <i className='m-1 fas fa-shopping-cart' />\r\n            </button>\r\n            <button\r\n              className='sellStockButton m-3 d-block'\r\n              onClick={this.sellStock}\r\n            >\r\n              Sell\r\n              <i className='m-1 fas fa-dollar-sign' />\r\n            </button>\r\n\r\n            <button\r\n              className='advanceButton m-3 d-block'\r\n              onClick={this.advanceDay}\r\n            >\r\n              Advance\r\n              <i className='m-1 fas fa-arrow-alt-circle-right' />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <ToastContainer data={this.state} />\r\n        <ProgressBar\r\n          striped\r\n          variant='success'\r\n          now={value}\r\n          label='VALUE'\r\n          className='valueBar m-3'\r\n        />\r\n        <ProgressBar\r\n          striped\r\n          variant='info'\r\n          now={quantity}\r\n          label='QUANTITY'\r\n          className='quantityBar m-3'\r\n        />\r\n        <ProgressBar\r\n          striped\r\n          variant='danger'\r\n          now={balance / 20}\r\n          label='BALANCE'\r\n          className='balanceBar m-3'\r\n        />\r\n        <div className='d-flex justify-content-center'>\r\n          <button className='resetButton m-2' onClick={this.resetGame}>\r\n            Reset\r\n            <i className='m-1 fas fa-undo' />\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    ) : (\r\n      <div className='game-over'>\r\n        <h1>Game Over!</h1>\r\n        <button className='resetButton m-2 ' onClick={this.resetGame}>\r\n          Reset\r\n          <i className='m-1 fas fa-undo' />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { Switch, Route, HashRouter } from 'react-router-dom'\nimport Navbar from './Navbar'\nimport Home from './Home.js'\nimport Stocks from './Stocks'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/stocks' component={Stocks} />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/me.20b68db0.jpg\";"],"sourceRoot":""}