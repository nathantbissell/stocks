{"version":3,"sources":["Navbar.js","Stocks.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","NavWrapper","className","react_router_dom","to","Component","styled","nav","_templateObject","Stocks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buyStock","state","balance","toggleLowFunds","value","setState","quantity","triggerGameOver","sellStock","advanceDay","Math","floor","random","day","gameOver","toast","resetGame","lowFunds","quantityBarAlmostFull","_this$state","onClick","Fragment","id","class","react_toastify","ProgressBar_default","striped","variant","now","label","Home","HomeWrapper","Button","div","Home_templateObject","App","Navbar_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom_min","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0af56fe.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <NavWrapper className='navbar navbar-expand-sm navbar-dark px-sm-5'>\r\n        {/* https://www.iconfinder.com/icons/1243689/call_phone_icon Creative\r\n          Commons (Attribution 3.0 Unported);\r\n          https://www.iconfinder.com/Makoto_msk */}\r\n        <Link to='/'>\r\n          {/* <img src={logo} alt='store' className='navbar-brand' /> */}\r\n          <i className='fas fa-home nav-link' />\r\n        </Link>\r\n        {/* <ul className='navbar-nav align-items-center'>\r\n          <li className='nav-item ml-5'>\r\n            <Link to='/' className='nav-link'>\r\n              Game\r\n            </Link>\r\n          </li>\r\n        </ul> */}\r\n      </NavWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst NavWrapper = styled.nav`\r\n  background: var(--navy);\r\n  .nav-link {\r\n    color: var(--mainWhite) !important;\r\n    font-size: 1.3rem;\r\n    // 1rem = 16px, if user changes size of site, will respond accordingly\r\n    // important is called here cause navlink is a boostrap method that needs overriding\r\n    text-transform: capitalize;\r\n  }\r\n  .nav-link:hover {\r\n    color: var(--lightBlue) !important;\r\n    transition: all 0.5s ease-in-out;\r\n  }\r\n  .logo {\r\n    left: 47%;\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 75px;\r\n  }\r\n`\r\n","import React, { Component } from 'react'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './Stocks.css'\r\n\r\nclass Stocks extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: 3,\r\n      day: 0,\r\n      quantity: 1,\r\n      balance: 10,\r\n      gameOver: false,\r\n      lowFunds: false,\r\n      quantityBarAlmostFull: false\r\n    }\r\n  }\r\n\r\n  buyStock = () => {\r\n    if (this.state.balance < 25) {\r\n      this.toggleLowFunds()\r\n    }\r\n    if (this.state.balance - this.state.value >= 0) {\r\n      this.setState({\r\n        quantity: this.state.quantity + 1,\r\n        balance: this.state.balance - this.state.value\r\n      })\r\n    }\r\n    this.triggerGameOver()\r\n  }\r\n\r\n  sellStock = () => {\r\n    if (this.state.quantity > 0) {\r\n      this.setState({\r\n        quantity: this.state.quantity - 1,\r\n        balance: this.state.balance + this.state.value\r\n      })\r\n    }\r\n    this.triggerGameOver()\r\n  }\r\n\r\n  advanceDay = () => {\r\n    this.setState({\r\n      value: Math.floor(Math.random() * 101 + 0),\r\n      day: this.state.day + 1\r\n    })\r\n    this.triggerGameOver()\r\n  }\r\n\r\n  triggerGameOver = () => {\r\n    if (this.state.value === 0 || this.state.balance === 0) {\r\n      this.setState({\r\n        gameOver: true\r\n      })\r\n    }\r\n  }\r\n  toggleLowFunds = () => toast('Warning! Low on funds!')\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      value: 3,\r\n      day: 0,\r\n      quantity: 1,\r\n      balance: 10,\r\n      gameOver: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { value, quantity, balance, day, lowFunds } = this.state\r\n    return !this.state.gameOver ? (\r\n      <React.Fragment>\r\n        <div className='container jumbotron'>\r\n          <div className='dayLabel' id='label'>\r\n            <i class='far fa-calendar-alt' /> Day : {day}\r\n          </div>\r\n          <div className='quantityLabel' id='label'>\r\n            <i class='fas fa-coins' /> Quantity : {quantity}\r\n          </div>\r\n\r\n          <div className='valueLabel' id='label'>\r\n            <i class='fas fa-chart-line' /> Value : {value}\r\n          </div>\r\n          <div className='balanceLabel' id='label'>\r\n            <i className='fas fa-money-bill' /> Balance : {balance}\r\n          </div>\r\n\r\n          <ToastContainer />\r\n        </div>\r\n        <div className='buttonContainer d-flex justify-content-left'>\r\n          <button className='buyStockButton m-2' onClick={this.buyStock}>\r\n            Buy\r\n            <i class='m-1 fas fa-shopping-cart' />\r\n          </button>\r\n          <button className='sellStockButton m-2' onClick={this.sellStock}>\r\n            Sell\r\n            <i class='m-1 fas fa-dollar-sign' />\r\n          </button>\r\n\r\n          <button className='advanceButton m-2 ' onClick={this.advanceDay}>\r\n            Advance\r\n            <i className='m-1 fas fa-arrow-alt-circle-right' />\r\n          </button>\r\n        </div>\r\n        <ProgressBar\r\n          striped\r\n          variant='success'\r\n          now={value}\r\n          label='VALUE'\r\n          className='valueBar m-3'\r\n        />\r\n        <ProgressBar\r\n          striped\r\n          variant='info'\r\n          now={quantity}\r\n          label='QUANTITY'\r\n          className='quantityBar m-3'\r\n        />\r\n        <ProgressBar\r\n          striped\r\n          variant='danger'\r\n          now={balance / 20}\r\n          label='BALANCE'\r\n          className='balanceBar m-3'\r\n        />\r\n\r\n        <button className='resetButton m-2 ' onClick={this.resetGame}>\r\n          Reset\r\n          <i className='m-1 fas fa-undo' />\r\n        </button>\r\n      </React.Fragment>\r\n    ) : (\r\n      <div>\r\n        <p>Game Over!</p>\r\n        <button className='resetButton m-2 ' onClick={this.resetGame}>\r\n          Reset\r\n          <i className='m-1 fas fa-undo' />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stocks\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Link, HashRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport Stocks from './Stocks'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <HomeWrapper>\r\n        <h1 className='mt-5'>Bull Market</h1>\r\n        <h4>About the game</h4>\r\n        <h6>Objective: fill your bank account!</h6>\r\n        <ul>\r\n          <li>You have the option to buy or sell stock each day</li>\r\n          <li>\r\n            If you are satisfied with your turn, you can advance to the next day\r\n          </li>\r\n          <li>The stock value will increase or decrease randomly</li>\r\n        </ul>\r\n        <Link to='/stocks' className='nav-link'>\r\n          <Button variant='dark'>Go to Game</Button>\r\n        </Link>\r\n      </HomeWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst HomeWrapper = styled.div`\r\n  position: absolute;\r\n  height: 1000px;\r\n  width: 1000px;\r\n  left: 50px;\r\n`\r\n","import React, { Component } from 'react'\nimport { Switch, Route, Link, HashRouter } from 'react-router-dom'\nimport Navbar from './Navbar'\nimport Home from './Home.js'\nimport Stocks from './Stocks'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/stocks' component={Stocks} />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}